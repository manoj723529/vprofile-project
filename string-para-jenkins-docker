pipeline {
    agent any

    parameters {
        string(name: 'IMAGE_NAME', defaultValue: 'image', description: 'Base Docker image name')
        string(name: 'IMAGE_VERSION', defaultValue: 'latest', description: 'Version/tag for the image')
        string(name: 'HOST_PORT', defaultValue: '8888', description: 'Host port to expose')
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/manoj723529/vprofile-project.git']])
            }
        }

        stage('Maven Compile') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Maven Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Maven Package') {
            steps {
                sh 'mvn package'
            }
        }
        stage('Build and Push to Docker Hub') {
            steps {
                script {
                    def fullImage = "manoj7235/${params.IMAGE_NAME}:${params.IMAGE_VERSION}"
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh "docker build -t ${params.IMAGE_NAME}:${params.IMAGE_VERSION} ."
                        sh "docker tag ${params.IMAGE_NAME}:${params.IMAGE_VERSION} ${fullImage}"
                        sh "docker push ${fullImage}"
                    }
                }
            }
        }

        stage('Deploy to Container') {
            steps {
                script {
                    def fullImage = "manoj7235/${params.IMAGE_NAME}:${params.IMAGE_VERSION}"
                    sh """
                        docker rm -f con1 || true
                        docker run -d --name con1 \\
                            -p ${params.HOST_PORT}:8080\\
                            ${fullImage}
                    """
                }
            }
        }
    }
}
